{"version":3,"sources":["commonRoute.js"],"names":["router","require","Router","middleware","req","res","next","render","title","get","params","ass_name","data","redirect","post","IndexModel","addNewStudent","status","body","call","pool","then","result","error","module","exports"],"mappings":"aAAA,IAAIA,OAASC,QAAQ,WAAWC,SAC5BC,WAAaF,QAAQ,gBADrBD,WAASC,QAAQ,2BACrBD,OAAIG,IAAAA,IAAU,SAAWC,EAAAC,EAAAC,GAIvBD,EAAIE,OAAO,QAAS,CAAEC,MAAO,6CAG/BR,OAAOS,IAAI,eAAgB,SAAUL,EAAKC,EAAKC,GAC7CD,EAAIE,OAAO,oBAAqB,CALlCP,MAAW,8CAEVA,OAFDS,IAAA,cAAA,SAAAL,EAAAC,EAAAC,GAIAN,EAAMO,OAAK,mBAAgB,CACzBF,MAAIE,4DAKNP,OAAOS,IAAI,qBAAe,SAAeJ,EAAKC,EAAMA,GAClDD,EAAIE,OAAO,0BAAoB,CAC7BC,MAAO,4DAKTH,OAAIE,IAAAA,gBAAO,SAAXH,EAAsCC,EAAAC,GACpCE,EAAAA,OAAO,qBAAA,CADTA,MAAA,4DAMiCR,OAAjCS,IAAA,yBAAA,SAAAL,EAAAC,EAAAC,GAMFN,OAPAI,EAAAM,OAAAC,UAQE,IAAIC,qBAGAP,EAAIE,OAAO,gCAAiC,CAFhDC,MAAA,oDAEIH,MACEG,IAAAA,SAD0CH,EAA5CE,OAAA,qBAAA,CAGAC,MAAA,yCACF,MAEIA,IAAAA,eAD+BH,EAAjCE,OAAA,0BAAA,CAGAC,MAAA,8CAEF,MAEIA,IAAAA,qBADoCH,EAAtCE,OAAA,iCAAA,CAGAC,MAAA,qDAEF,MACEH,IAAG,gBACDG,EAAAA,OAAO,2BAAA,CADTA,MAAA,+CAQA,MAJF,IAAK,gBACHH,EAAIE,OAAO,0BAAX,CACEC,MAAO,8CAET,MAMF,IAAK,YALLH,EAAKE,OAAA,uBAAL,CACEF,MAAIE,2CAAkC,MAGtC,IAAA,UAOAF,EAAIE,OAAO,sBAAuB,CANpCC,MAAK,0CAEDA,MADiC,QAGnCH,EAAAQ,SAAA,QAEkCb,OAAlCS,IAAA,6BAAA,SAAAL,EAAAC,EAAAC,GAGAD,EAAAE,OAAA,eAAA,CASFC,MAAO,4DAnDTR,OAAAS,IAAA,0BAAA,SAAAL,EAAAC,EAAAC,GAFFD,EAAAE,OAAA,eAAA,CAmDAP,MAAW,4DAIVA,OAJDS,IAAA,0BAAA,SAAAL,EAAAC,EAAAC,GAMAN,EAAMO,OAAK,wBAA2B,CACpCF,MAAIE,4DAKNP,OAAOS,IAAI,qBAAA,SAA2BL,EAAUA,EAAKC,GACnDA,EAAIE,OAAO,aAAA,CACTC,MAAO,4DAKTH,OAAIE,IAAAA,6BAAqB,SAAAH,EAAAC,EAAAC,GACvBE,EAAAA,OAAO,gBAAA,CADTA,MAAA,4DAOEA,OAAAA,IAAO,uBAAA,SAAAJ,EAAAC,EAAAC,GADmBD,EAA5BE,OAAA,qBAAA,CADFC,MAAA,4DAaAR,OAAAc,KACAd,0BAIIG,WAAWC,uBACXW,SAAUX,EAACY,GAEPX,IAAIY,EAAOb,EAAXc,KAAuBC,WAAMH,cAAAX,EAAAe,KAAAR,GAA7BS,KAAA,SAAAC,GAFJjB,EAAAY,OAIS,KAACM,KAAD,CAAWJ,KAAA,MAFOA,MAGF,SAAAI,GAAWA,EAAKN,OAALM,KAAAA,KAAAA,CAAAA,KAAAA,EAAAA,MAAAA,QAIxCC,OAAOC,QAAUzB","file":"commonRoute.min.js","sourcesContent":["var router = require(\"express\").Router();\r\nvar middleware = require(\"./middleware\");\r\nvar IndexModel = require(\"../app/model/IndexModel\");\r\n/* GET home page. */\r\nrouter.get(\"/\", function (req, res, next) {\r\n  res.render(\"index\", { title: \"Testing Shastra | Training | Placement\" });\r\n});\r\n\r\nrouter.get(\"/assignments\", function (req, res, next) {\r\n  res.render(\"pages/assignments\", {\r\n    title: \"Testing Shastra | Programs | Assignment\",\r\n  });\r\n});\r\n\r\nrouter.get(\"/contact-us\", function (req, res, next) {\r\n  res.render(\"pages/contact_us\", {\r\n    title: \"Testing Shastra | Contact Us | Get In Touch | Address\",\r\n  });\r\n});\r\n\r\nrouter.get(\"/recent-placements\", function (req, res, next) {\r\n  res.render(\"pages/Recent_Placements\", {\r\n    title: \"Testing Shastra | Contact Us | Get In Touch | Address\",\r\n  });\r\n});\r\n\r\nrouter.get(\"/registration\", function (req, res, next) {\r\n  res.render(\"pages/registration\", {\r\n    title: \"Testing Shastra | Contact Us | Get In Touch | Address\",\r\n  });\r\n});\r\n\r\n\r\nrouter.get(\"/assignments/:ass_name\", function (req, res, next) {\r\n  var data = req.params.ass_name;\r\n  switch (data) {\r\n    case \"confirmation-alert\":\r\n      res.render(\"assignments/ConfirmationAlert\", {\r\n        title: \"Testing Shastra Assignments | ConfirmationAlert\",\r\n      });\r\n      break;\r\n    case \"prompt\":\r\n      res.render(\"assignments/Prompt\", {\r\n        title: \"Testing Shastra Assignments | Prompt\",\r\n      });\r\n      break;\r\n\r\n    case \"simple-alert\":\r\n      res.render(\"assignments/SimpleAlert\", {\r\n        title: \"Testing Shastra Assignments | SimpleAlert\",\r\n      });\r\n      break;\r\n\r\n    case \"windowHandlingDemo\":\r\n      res.render(\"assignments/windowHandlingDemo\", {\r\n        title: \"Testing Shastra Assignments | windowHandlingDemo\",\r\n      });\r\n      break;\r\n    case \"parent-window\":\r\n      res.render(\"assignments/ParentWindow\", {\r\n        title: \"Testing Shastra Assignments | ParentWindow\",\r\n      });\r\n      break;\r\n    case \"drag-and-drop\":\r\n      res.render(\"assignments/DragAndDrop\", {\r\n        title: \"Testing Shastra Assignments | DragAndDrop\",\r\n      });\r\n      break;\r\n    case \"drop-down\":\r\n      res.render(\"assignments/DropDown\", {\r\n        title: \"Testing Shastra Assignments | DropDown\",\r\n      });\r\n      break;\r\n    case \"Tooltip\":\r\n      res.render(\"assignments/ToolTip\", {\r\n        title: \"Testing Shastra Assignments | ToolTip\",\r\n      });\r\n      break;\r\n    default:\r\n      res.redirect(\"/\");\r\n      break;\r\n  }\r\n});\r\n\r\nrouter.get(\"/course/automation-testing\", function (req, res, next) {\r\n  res.render(\"pages/course\", {\r\n    title: \"Testing Shastra | Contact Us | Get In Touch | Address\",\r\n  });\r\n});\r\n\r\nrouter.get(\"/course/python-selenium\", function (req, res, next) {\r\n  res.render(\"pages/python\", {\r\n    title: \"Testing Shastra | Contact Us | Get In Touch | Address\",\r\n  });\r\n});\r\n\r\nrouter.get(\"/course/java-full-stack\", function (req, res, next) {\r\n  res.render(\"pages/java_full_stack\", {\r\n    title: \"Testing Shastra | Contact Us | Get In Touch | Address\",\r\n  });\r\n});\r\n\r\nrouter.get(\"/course/mern-stack\", function (req, res, next) {\r\n  res.render(\"pages/mern\", {\r\n    title: \"Testing Shastra | Contact Us | Get In Touch | Address\",\r\n  });\r\n});\r\n\r\nrouter.get(\"/course/rest-api-developer\", function (req, res, next) {\r\n  res.render(\"pages/restApi\", {\r\n    title: \"Testing Shastra | Contact Us | Get In Touch | Address\",\r\n  });\r\n});\r\n\r\nrouter.get(\"/course/registration\", function (req, res, next) {\r\n  res.render(\"pages/registration\", {\r\n    title: \"Testing Shastra | Contact Us | Get In Touch | Address\",\r\n  });\r\n});\r\n\r\n\r\n0.\r\nrouter.post(\r\n  \"/save-webinar-candidate\",\r\n  middleware.checkForPoolConnection,\r\n  function (req, res) {\r\n    var data = req.body;\r\n    IndexModel.addNewStudent(res.pool, data)\r\n      .then(function (result) {\r\n        res.status(200).send({ call: 1 });\r\n      })\r\n      .catch((error) => {\r\n        res.status(500).send({ call: 0, error });\r\n      });\r\n  }\r\n);\r\nmodule.exports = router;\r\n"]}